{"ast":null,"code":"var _jsxFileName = \"/Users/chenyanglu/Desktop/LaiOffer/Winter/a-Community-Property-Management-System/communityfe/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport { Button, Form, Input, message, Checkbox } from \"antd\";\nimport React, { useState } from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { login } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = () => {\n  _s();\n  state = {\n    loading: false\n  };\n  const [isAdmin, setAdmin] = useState('');\n  const handleAdmin = () => {\n    isAdmin = !setAdmin();\n  };\n  onFinish = data => {\n    this.setState({\n      loading: true\n    });\n    login(data).then(() => {\n      message.success(`Login Successful`);\n      this.props.onSuccess();\n    }).catch(err => {\n      message.error(err.message);\n    }).finally(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n  render = () => {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      name: \"normal_login\",\n      onFinish: this.onFinish,\n      style: {\n        width: 300,\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: \"Please input your Username!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, this),\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: \"Please input your Password!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 35\n          }, this),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: handleAdmin,\n          children: \"Administrator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: this.state.loading,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(LoginForm, \"od00co09ibeXZCNwxHrhQIrSgk0=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Button","Form","Input","message","Checkbox","React","useState","LockOutlined","UserOutlined","login","LoginForm","state","loading","isAdmin","setAdmin","handleAdmin","onFinish","data","setState","then","success","props","onSuccess","catch","err","error","finally","render","width","margin","required","offset","span"],"sources":["/Users/chenyanglu/Desktop/LaiOffer/Winter/a-Community-Property-Management-System/communityfe/src/components/LoginForm.js"],"sourcesContent":["import { Button, Form, Input, message, Checkbox } from \"antd\";\nimport React, { useState } from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { login } from \"../utils\";\n\nexport const LoginForm =() => {\n  state = {\n    loading: false,\n  };\n\n  const [isAdmin, setAdmin] = useState('');\n  const handleAdmin =()=>{\n    isAdmin = !setAdmin()\n\n  ;}\n\n  onFinish = (data) => {\n    this.setState({\n      loading: true,\n    });\n    login(data)\n      .then(() => {\n        message.success(`Login Successful`);\n        this.props.onSuccess();\n      })\n      .catch((err) => {\n        message.error(err.message);\n      })\n      .finally(() => {\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  render = () => {\n    return (\n      <Form\n        name=\"normal_login\"\n        onFinish={this.onFinish}\n        style={{\n          width: 300,\n          margin: \"auto\",\n        }}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\n        >\n          <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n        </Form.Item>\n        <Form.Item\n          name=\"remember\"\n          valuePropName=\"checked\"\n          wrapperCol={{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <Checkbox onChange={handleAdmin}>Administrator</Checkbox>\n\n          <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\n            Login\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n}\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,MAAM;AAC7D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,YAAY,QAAQ,mBAAmB;AAC9D,SAASC,KAAK,QAAQ,UAAU;AAAC;AAEjC,OAAO,MAAMC,SAAS,GAAE,MAAM;EAAA;EAC5BC,KAAK,GAAG;IACNC,OAAO,EAAE;EACX,CAAC;EAED,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,WAAW,GAAE,MAAI;IACrBF,OAAO,GAAG,CAACC,QAAQ,EAAE;EAEtB,CAAC;EAEFE,QAAQ,GAAIC,IAAI,IAAK;IACnB,IAAI,CAACC,QAAQ,CAAC;MACZN,OAAO,EAAE;IACX,CAAC,CAAC;IACFH,KAAK,CAACQ,IAAI,CAAC,CACRE,IAAI,CAAC,MAAM;MACVhB,OAAO,CAACiB,OAAO,CAAE,kBAAiB,CAAC;MACnC,IAAI,CAACC,KAAK,CAACC,SAAS,EAAE;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdrB,OAAO,CAACsB,KAAK,CAACD,GAAG,CAACrB,OAAO,CAAC;IAC5B,CAAC,CAAC,CACDuB,OAAO,CAAC,MAAM;MACb,IAAI,CAACR,QAAQ,CAAC;QACZN,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAEDe,MAAM,GAAG,MAAM;IACb,oBACE,QAAC,IAAI;MACH,IAAI,EAAC,cAAc;MACnB,QAAQ,EAAE,IAAI,CAACX,QAAS;MACxB,KAAK,EAAE;QACLY,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE;MACV,CAAE;MAAA,wBAEF,QAAC,IAAI,CAAC,IAAI;QACR,IAAI,EAAC,UAAU;QACf,KAAK,EAAE,CAAC;UAAEC,QAAQ,EAAE,IAAI;UAAE3B,OAAO,EAAE;QAA8B,CAAC,CAAE;QAAA,uBAEpE,QAAC,KAAK;UAAC,MAAM,eAAE,QAAC,YAAY;YAAA;YAAA;YAAA;UAAA,QAAI;UAAC,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAChD,eACZ,QAAC,IAAI,CAAC,IAAI;QACR,IAAI,EAAC,UAAU;QACf,KAAK,EAAE,CAAC;UAAE2B,QAAQ,EAAE,IAAI;UAAE3B,OAAO,EAAE;QAA8B,CAAC,CAAE;QAAA,uBAEpE,QAAC,KAAK,CAAC,QAAQ;UAAC,MAAM,eAAE,QAAC,YAAY;YAAA;YAAA;YAAA;UAAA,QAAI;UAAC,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACzD,eACZ,QAAC,IAAI,CAAC,IAAI;QACR,IAAI,EAAC,UAAU;QACf,aAAa,EAAC,SAAS;QACvB,UAAU,EAAE;UACV4B,MAAM,EAAE,CAAC;UACTC,IAAI,EAAE;QACR,CAAE;QAAA,wBAEF,QAAC,QAAQ;UAAC,QAAQ,EAAEjB,WAAY;UAAA,UAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAW,eAEzD,QAAC,MAAM;UAAC,IAAI,EAAC,SAAS;UAAC,QAAQ,EAAC,QAAQ;UAAC,OAAO,EAAE,IAAI,CAACJ,KAAK,CAACC,OAAQ;UAAA,UAAC;QAEtE;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAEX,CAAC;AACH,CAAC;AAAA,GArEYF,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}