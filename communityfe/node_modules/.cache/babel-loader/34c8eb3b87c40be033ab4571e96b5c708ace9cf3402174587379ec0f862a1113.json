{"ast":null,"code":"export const login = credential => {\n  const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n  return fetch(loginUrl, {\n    //发出指令//from window, global function\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\" //accept cookies which save session id / token //need to tell browser.\n  }).then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      //callback\n      throw Error(\"Fail to log in\");\n    }\n  });\n};\nexport const signup = data => {\n  const signupUrl = \"/signup\";\n  return fetch(signupUrl, {\n    method: \"POST\",\n    headers: {\n      //request header\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    //fetch return an object, when have a .then function\n    if (response.status < 200 || response.status >= 300) {\n      //whne there is a response\n      throw Error(\"Fail to sign up\");\n    }\n  });\n\n  //can not be const resp = fetch()\n  //console.log(resp); -> not sure if there will be a response\n};\n\n// need to modify based on backend API\nexport const getMenus = restId => {\n  return fetch(`/restaurant/${restId}/menu`).then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get menus\");\n    }\n    return response.json();\n  });\n};\nexport const getAnnouncements = () => {\n  return fetch(\"/announcements\").then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get restaurants\");\n    }\n    return response.json();\n  });\n};\nexport const getCart = () => {\n  return fetch(\"/cart\").then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get shopping cart data\");\n    }\n    return response.json();\n  });\n};\nexport const checkout = () => {\n  return fetch(\"/checkout\").then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to checkout\");\n    }\n  });\n};\nexport const addItemToCart = itemId => {\n  return fetch(`/order/${itemId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\"\n  }).then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to add menu item to shopping cart\");\n    }\n  });\n};","map":{"version":3,"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","signupUrl","body","JSON","stringify","getMenus","restId","json","getAnnouncements","getCart","checkout","addItemToCart","itemId"],"sources":["/Users/chenyanglu/Desktop/LaiOffer/Winter/a-Community-Property-Management-System/communityfe/src/utils.js"],"sourcesContent":["export const login = (credential) => {\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n  \n    return fetch(loginUrl, { //发出指令//from window, global function\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\", //accept cookies which save session id / token //need to tell browser.\n    }).then((response) => {\n      if (response.status < 200 || response.status >= 300) { //callback\n        throw Error(\"Fail to log in\");\n      }\n    });\n  };\n  \n  export const signup = (data) => {\n    const signupUrl = \"/signup\";\n  \n    return fetch(signupUrl, {\n      method: \"POST\",\n      headers: { //request header\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((response) => { //fetch return an object, when have a .then function\n      if (response.status < 200 || response.status >= 300) { //whne there is a response\n        throw Error(\"Fail to sign up\");\n      }\n    });\n\n    //can not be const resp = fetch()\n    //console.log(resp); -> not sure if there will be a response\n  };\n  \n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  // need to modify based on backend API\n  export const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to get menus\");\n      }\n  \n      return response.json();\n    });\n  };\n  \n  export const getAnnouncements = () => {\n    return fetch(\"/announcements\").then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to get restaurants\");\n      }\n  \n      return response.json();\n    });\n  };\n  \n  export const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to get shopping cart data\");\n      }\n  \n      return response.json();\n    });\n  };\n  \n  export const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to checkout\");\n      }\n    });\n  };\n  \n  export const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n    }).then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to add menu item to shopping cart\");\n      }\n    });\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}